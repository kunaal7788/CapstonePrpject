<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Kunal" failures="1" tests="12" name="Default test" time="138.175" errors="0" timestamp="2025-03-22T11:37:29 IST">
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="3.027"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="43.143"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="16.094"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="3.109"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="3.238"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="12.936"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="12.236"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="17.138"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="10.12"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="4.029"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="4.562"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="4.861">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;User updates product quantity to 3&amp;apos; and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When(&amp;quot;User updates product quantity to {int}&amp;quot;)
public void user_updates_product_quantity_to(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&amp;quot;Product quantity should be updated&amp;quot;)
public void product_quantity_should_be_updated() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User updates product quantity to 3' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User updates product quantity to {int}")
public void user_updates_product_quantity_to(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Product quantity should be updated")
public void product_quantity_should_be_updated() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- runScenario -->
</testsuite> <!-- Default test -->
